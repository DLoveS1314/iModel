#! /usr/bin/env python3
#---------------------------------
#   Plots errors of experiments
#      obtained from iModel output
#   Pedro Peixoto (ppeixoto@usp.br)
#   Novembre 2018
#----------------------------------


import sys
import os
import re
import string
import numpy as np

import matplotlib
#matplotlib.use('Agg')
import matplotlib.pyplot as plt
from matplotlib.figure import Figure

#Custom plotting setup
import imodel_plot
from imodel_plot import Plotter, PlotterPanel

#imodel routines
from imodel_data import Names, Filter, imodelData

# input filename
input_filename = 'errors.txt'
if len(sys.argv) <= 1 :
	print("I need 1 argument:")
	print("A filename containing the errors generated by imodel")
	sys.exit(1)
	
if len(sys.argv) > 1:
	input_filename = sys.argv[1]
	

#Check what is in the data file by looking at its name
if "swm" in input_filename:
	swmdata=True
else:
	print("The filename does not contain swm data")
	print("Are you sure this ia valid format for this script?")
	sys.exit(1)

data=imodelData(input_filename)

data.getoptions()

#Dictionary for fancy naming
dict=Names("naming_conv.csv") #Load naming convention
print()

#Filter options
options=Filter("options.csv") #load filtering conditions
print("Filtred variables")
for var in data.datastr:
	data.varoptions[var]=options.select(data.varoptions[var], var)

sys.exit(1)


#if 'Field' in data.datastr:
#Naming 
	#outname=input_filename.replace('.txt', "_"+f+".eps")


""" for f in fields_list:
	
	title=dict.names.get(f, f)
	figure = PlotterPanel( 2, title, ["grid points", "grid points"], ["max error", "rms error"])
	c = 0
	for mtd in methods_list:
		mtdname=dict.names.get(mtd, mtd)
		for grd in grids_list:
			grdname=dict.names.get(grd, grd)
			name=mtdname+" "+grdname			
			x = []
			ymax = []
			yrms = []
			for i, val in enumerate(maxerrors):
				if field[i] == f and methods[i] == mtd and gridnames[i] == grd:
					x.append(gridres[i])
						ymax.append(maxerrors[i])
						yrms.append(rmserrors[i])
				figure.plot( 0, x, ymax, label=name, i=c)
				figure.plot( 1, x, yrms, label=name, i=c)
				c = c + 1
				
				#plt.show()
				
		figure.finish(outname)

	#figurerms.finish(outnamerms)


#plt.show()
 """
